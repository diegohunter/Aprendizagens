// <auto-generated />
using System;
using Angular.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Angular.Migrations
{
    [DbContext(typeof(AngularTestContext))]
    partial class AngularTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Angular.Models.Course", b =>
                {
                    b.Property<int?>("CourseID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Credits");

                    b.Property<string>("Title");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Angular.Models.Enrollment", b =>
                {
                    b.Property<int?>("EnrollmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CourseID");

                    b.Property<int?>("Grade");

                    b.Property<int?>("StudentID");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Angular.Models.Student", b =>
                {
                    b.Property<int?>("StudentID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("EnrollmentDate");

                    b.Property<string>("FirstMidName");

                    b.Property<string>("LastName");

                    b.HasKey("StudentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Angular.Models.Enrollment", b =>
                {
                    b.HasOne("Angular.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID");

                    b.HasOne("Angular.Models.Student", "Student")
                        .WithMany("Enrollment")
                        .HasForeignKey("StudentID");
                });
#pragma warning restore 612, 618
        }
    }
}
